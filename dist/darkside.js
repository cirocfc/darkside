/**
 * @name darkside 0.0.1
 * @license MIT
 * @author @cirocfc (ciro.cfc@gmail.com) | @jefferson-amorim (jefferson@jeffersonamorim.com.br)
 */
!function(){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var global,debug,darkside,events,emptyFn=function(){},methods={info:emptyFn,warn:emptyFn,error:emptyFn,table:emptyFn},Debug=function Debug(){var _this=this;_classCallCheck(this,Debug),Object.keys(methods).forEach(function(key){return _this[key]=methods[key]})},ListenerTracker=function(_elements_,_listeners_){var _super_={},is_active=!1;this.init=function(){is_active||intercep_events_listeners(),is_active=!0},this.destroy=function(){is_active&&(Element.prototype.addEventListener=_super_.addEventListener,Element.prototype.removeEventListener=_super_.removeEventListener,delete Element.prototype.getEventListeners,_elements_.forEach(function(element){element.addEventListener=element.__proto__.addEventListener=Element.prototype.addEventListener,element.removeEventListener=element.__proto__.removeEventListener=Element.prototype.removeEventListener,delete element.__proto__.getEventListeners,delete element.getEventListeners}))};var register_element=function(element){if(-1==_elements_.indexOf(element)){_elements_.push(element),_listeners_.push([{},{}])}return _listeners_[_elements_.indexOf(element)]},intercep_events_listeners=function(){_super_.addEventListener=Element.prototype.addEventListener,_super_.removeEventListener=Element.prototype.removeEventListener,Element.prototype.addEventListener=function(type,listener,useCapture){var listeners=register_element(this);_super_.addEventListener.apply(this,arguments),listeners[useCapture=useCapture?1:0][type]||(listeners[useCapture][type]=[]),listeners[useCapture][type].push(listener)},Element.prototype.removeEventListener=function(type,listener,useCapture){var listeners=register_element(this);if(_super_.removeEventListener.apply(this,arguments),listeners[useCapture=useCapture?1:0][type]){var lid=listeners[useCapture][type].indexOf(listener);-1<lid&&listeners[useCapture][type].splice(lid,1),!this.getEventListeners().length&&_elements_.splice(_elements_.indexOf(this),1)}},Element.prototype.getEventListeners=function(type){for(var list,listeners=register_element(this),result=[],useCapture=0;list=listeners[useCapture];useCapture++)if("string"==typeof type){if(list[type])for(var id in list[type])result.push({type:type,listener:list[type][id],useCapture:!!useCapture})}else for(var _type in list)for(var _id in list[_type])result.push({type:_type,listener:list[_type][_id],useCapture:!!useCapture});return result}}},Events=function(){function Events(global,debug){if(_classCallCheck(this,Events),!global)throw"Darkside - Main - No global was provided!";this.debug=debug,this.global=global,this.active=!1,this.modules={},this._elements_=[],this._listeners_=[],this.listenerTracker=new ListenerTracker(this._elements_,this._listeners_)}return _createClass(Events,[{key:"init",value:function(){this.active?this.debug.info("Darkside - Events - Already initialized!"):(this.active=!0,this.listenerTracker.init(),this.debug.info("Darkside - Events - Initialized!"))}},{key:"destroy",value:function(){this.active?(this.active=!1,this.listenerTracker.destroy(),this._elements_=null,this._listeners_=null,this.debug.info("Darkside - Events - Destroyed!")):this.debug.info("Darkside - Events - Not initialized!")}},{key:"count",value:function(){var _this=this;return function(){return{elements:_this._elements_.length,listeners:(count=0,_this._elements_.forEach(function(element){return count+=element.getEventListeners().length}),count),detached:function(){var elements=_this._elements_.filter(function(element){return!_this.global.document.contains(element)}),count=0;return elements.forEach(function(element){return count+=element.getEventListeners().length}),{elements:elements.length,listeners:count}}()}();var count}}},{key:"elements",value:function(){var _this2=this;return{detached:_this2._elements_.filter(function(element){return!_this2.global.document.contains(element)})}}},{key:"garbageCollector",value:function(){var _this3=this;if(this.active){var count=0,elementsToRemove=this.elements().detached;elementsToRemove.forEach(function(element){var listeners=element.getEventListeners(),listenersLength=listeners.length;count+=listenersLength,listeners.forEach(function(options){element.removeEventListener(options.type,options.listener,options.useCapture)}),_this3.debug.info("Darkside - Events - garbageCollector: Detached element info:"),_this3.debug.table({element:{node:element,listeners:listenersLength}}),_this3._elements_.splice(_this3._elements_.indexOf(element),1)}),this.debug.info("Darkside - Events - garbageCollector:",elementsToRemove.length,"elements and",count,"listeners removed!")}else this.debug.info("Darkside - Events - Not initialized!")}}]),Events}(),Darkside=function(){function Darkside(global,debug){if(_classCallCheck(this,Darkside),!global)throw"Darkside - Main - No global was provided!";this.debug=debug,this.global=global,this.active=!1,this.modules={}}return _createClass(Darkside,[{key:"init",value:function(){var _this=this;this.active?this.debug.info("Darkside - Main - Already initialized!"):(Object.keys(this.modules).forEach(function(moduleName){return _this.modules[moduleName].init&&_this.modules[moduleName].init()}),this.active=!0,this.debug.info("Darkside - Main - All modules initialized!"))}},{key:"destroy",value:function(){var _this2=this;Object.keys(this.modules).forEach(function(moduleName){return _this2.modules[moduleName].destroy&&_this2.modules[moduleName].destroy()}),delete this.modules,this.debug.info("Darkside - Main - All modules destroyed!")}},{key:"module",value:function(name,dModule){if(void 0===dModule)return this.modules[name];this.modules[name]=dModule,this.debug.info("Darkside - Main - Registered module "+name+"!")}},{key:"toggleDebugger",value:function(active){var _this3=this;Object.keys(this.debug).forEach(function(key){_this3.debug[key]=!0===active?function(){this.global.console[key].apply(this.global.console,arguments)}.bind(_this3):function(){}})}}]),Darkside}();global=window,debug=new Debug,darkside=new Darkside(global,debug),events=new Events(global,debug),darkside.module("events",events),global.___darkside=darkside}();
